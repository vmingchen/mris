- The inner data structure of KVDB can be aware of multi-tier storage (GTSSL)
	as used in Rick's SOCC paper.

Idea
- Exploit Advantages of Different Storage Devices (NVRAM, SSD, HDD, and SMR)

- Efficient Metadata Management
	Metadata is usually small in size and more frequently accessed; and raw
	data is generally larger. In the scenario of an image store, raw data is
	the raw images; metadata can be their thumbnails and the attributes
	describing images. 

Pros
- device-aware

Small frequently accessed data is stored in top tiers, such as RAM and SSD.
Whereas large less popular data is stored in bottom tiers. 

Transactional Image Store

Features
- Transaction

Key techniques
- Use KVDB as the infrastructure
- The inner data structure of KVDB can be aware of multi-tier storage (GTSSL)
	as used in Rick's SOCC paper.

Key words
- Tiered Storage

References
- An Efficient Multi-Tier Tablet Server Storage Architecture
- Finding a needle in Haystack: Facebook's photo storage

+ Extent-based addressing VS. block addressing

The main problem was that although the free list was initially ordered for
optimal access, it quickly became scrambled as files were created and removed.
Eventually the free list became entirely random, causing files to have their
blocks allocated randomly over the disk. -- cite FFS.


FFS has the same idea by allowing blocks to be further dividable to fragments,
which is an optimization for small files.

In file trunk is rare -- need cite.

Objective:
- A metric to achieve is the average latency per object access

The default block sizes of Cassandra and HBase are 256KB and 64KB repectively.

Images, which are large objects, are more suitable for benchmarking the storage
subsystem than small objects, which make the whole system CPU-bound
\ref{spillane2011efficient}.

Allow application-specific optimization. For instance, thumbnails can be named
with a common prefix indicating it is a small object. Then, only a subset of
the key space is needed to be searched for reads.

It might be inconvienent to distribute files of a database into multiple
directory. However, we can alliviate this problem by using Unionfs.
